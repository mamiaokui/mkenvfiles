#!/bin/bash
#
# git-svn-diff originally by (http://mojodna.net/2009/02/24/my-work-git-workflow.html)
# modified by mike@mikepearce.net
# modified by aconway@[redacted] - handle diffs that introduce new files
# modified by t.broyer@ltgt.net - fixes diffs that introduce new files
# modified by m@rkj.me - fix sed syntax issue in OS X
#
# Generate an SVN-compatible diff against the tip of the tracking branch

# # Get the tracking branch (if we're on a branch)
# TRACKING_BRANCH=`git svn info | grep URL | sed -e 's/.*\/branches\///'`

# # If the tracking branch has 'URL' at the beginning, then the sed wasn't successful and
# # we'll fall back to the svn-remote config option
# if [[ "$TRACKING_BRANCH" =~ URL.* ]]
# then
#         TRACKING_BRANCH=`git config --get svn-remote.svn.fetch | sed -e 's/.*:refs\/remotes\///'`
# fi

if [ "$1" = "-h" ]; then
    echo "Usage: git-svn-diff [-b branch] [old_sha] [new_sha]"
    exit 0
elif [ "$1" = "-b" ]; then
    TRACKING_BRANCH=$2
    shift; shift
else
    TRACKING_BRANCH=`git branch -a |grep "*" |cut -c 2-`;
fi

OLD_REV=`git svn find-rev $(git rev-list --date-order --max-count=1 $TRACKING_BRANCH)`
NEW_ALT="working copy"

# diff with a SHA
if [ $# -ge 1 ]; then
    OLD_SHA=$1
    OLD_REV=`git svn find-rev $OLD_SHA`
    if [ -z "$OLD_REV" ]; then
        echo "error: the old_sha must relate to a revision of svn has been committed"
        exit 0
    fi
fi

# diff between two SHA
if [ $# -eq 2 ]; then
    NEW_SHA=$2
    NEW_REV=`git svn find-rev $NEW_SHA`
    # use working copy altnate if NEW_SHA hasn't dcommit to svn
    if [ "$NEW_REV" ]; then
        NEW_ALT="revision $NEW_REV"
    fi
fi

# Get the highest revision number

# Then do the diff from the highest revision on the current branch 
# and masssage into SVN format
# git diff --no-prefix $(git rev-list --date-order --max-count=1 $TRACKING_BRANCH) $* |
git diff $OLD_SHA $NEW_SHA --no-prefix |
sed -e "/--- \/dev\/null/{ N; s|^--- /dev/null\n+++ \(.*\)|---\1	(revision 0)\n+++\1	(revision 0)|;}" \
    -e "s/^--- .*/&	(revision $OLD_REV)/" \
    -e "s/^+++ .*/&	($NEW_ALT)/" \
    -e "s/^diff --git [^[:space:]]*/Index:/" \
    -e "s/^index.*/===================================================================/"

